import { useState, useEffect } from 'react'
import { Loader, FormField, RenderCards } from '../components'
import { cacheImages } from '../utils'
import { getPosts } from '../utils/fetchingFunctions'
import { ToastContainer } from 'react-toastify'

const Home = () => {
  const [loading, setLoading] = useState(false)
  const [allPosts, setAllPosts] = useState(null)
  const [allImages, setAllImages] = useState([])
  const [searchText, setSearchText] = useState('')
  const [searchedResults, setSearchedResults] = useState(null)
  const [searchTimeout, setSearchTimeout] = useState(null)

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout)
    setSearchText(e.target.value)

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        )
        setSearchedResults(searchResult)
      }, 500)
    )
  }

  const initialFetch = async () => {
    setLoading(true)
    await getPosts(setAllPosts)
    await cacheImages(allImages)
    setLoading(false)
  }
  useEffect(() => {
    const allImages = allPosts?.map((post) => post.image)
    setAllImages(allImages)
  }, [allPosts])

  useEffect(() => {
    initialFetch()
  }, [])

  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font font-extrabold text-[#222328] text-[32px]'>The Community Showcase </h1>
        <p className='mt-2 text-[#666e75] text-[16px] max-w-[500px]'>
          Browse through a collection of imaginative and visually stunning images generated by
          DALL-E AI
        </p>
      </div>

      <div className='mt-12 sm:mt-16'>
        <FormField
          labelName='Search posts'
          type='text'
          name='text'
          placeholder='Search posts'
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className='mt-10'>
        {loading ? (
          <div className='flex justify-center items-center'>
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                Showing results for <span className='text-[#222328] '>{searchText}</span>
              </h2>
            )}
            <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
              {searchText ? (
                <RenderCards data={searchedResults} title='No results found' />
              ) : (
                <RenderCards data={allPosts} title='No posts found' />
              )}
            </div>
          </>
        )}
      </div>
      <ToastContainer
        position='bottom-center'
        autoClose={5000}
        hideProgressBar={false}
        newestOnTop={false}
        closeOnClick
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
        theme='light'
      />
    </section>
  )
}

export default Home
